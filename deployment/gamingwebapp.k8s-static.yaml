apiVersion: v1
kind: Service
metadata:
  name: svc-gamingwebapp
  labels:
    version: dev
    product: RetroGaming
spec:
  selector:
    app: gamingwebapp
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
---
apiVersion: v1
kind: Service
metadata:
  name: svc-leaderboardwebapi
  labels:
    version: dev
    product: RetroGaming
spec:
  selector:
    app: leaderboardwebapi
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dep-gamingwebapp
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gamingwebapp
    spec:
      containers:
      - name: gamingwebapp
        terminationMessagePath: "/tmp/gamingwebapp-log"
        image: __containerregistry__/gamingwebapp:demo
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: ASPNETCORE_URLS
          value: http://0.0.0.0:80
        - name: LeaderboardApiOptions__BaseUrl
          value: http://svc-leaderboardwebapi
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          limits:
            cpu: "0.10"
      imagePullSecrets:
        - name: pullkey
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dep-leaderboardwebapi
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: leaderboardwebapi
    spec:
      containers:
      - name: leaderboardwebapi
        terminationMessagePath: "/tmp/leaderboardwebapi-log"
        image: __containerregistry__/leaderboardwebapi:demo
        imagePullPolicy: Always
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: ASPNETCORE_URLS
          value: http://0.0.0.0:80
        - name: ConnectionStrings__LeaderboardContext
          value: Server=dep-sqldata;Database=Leaderboard;User Id=sa;Password=Pass@word;Trusted_Connection=False
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          limits:
            cpu: "0.10"
      imagePullSecrets:
        - name: pullkey
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dep-sqldata
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sqldata
    spec:
      containers:
      - name: sqldata
        image: microsoft/mssql-server-linux
        env:
        - name: SA_PASSWORD
          value: Pass@word
        - name: MSSQL_PID
          value: Developer
        - name: ACCEPT_EULA
          value: "Y"
        ports:
        - containerPort: 1433
        resources:
          limits:
            cpu: "0.10"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-gamingwebapp
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: containerworkhop.__httpapplicationroutingdomain__
    http:
      paths:
      - path: /
        backend:
          serviceName: svc-gamingwebapp
          servicePort: 80
      - path: /api
        backend:
          serviceName: svc-leaderboardwebapi
          servicePort: 80
      - path: /swagger
        backend:
          serviceName: svc-leaderboardwebapi
          servicePort: 80
      - path: /health
        backend:
          serviceName: svc-leaderboardwebapi
          servicePort: 80